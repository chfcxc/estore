<template>
  <canvas
    class="cropper"
    disable-scroll="{{disable}}"
    @touchstart="ts"
    @touchmove="tm"
    @touchend="te"
    style="width:{{width}}px;height:{{height}}px;background-color: rgba(0, 0, 0, 0.8)"
    @error="canvasError"
    canvas-id="cropper">
  </canvas>
</template>

<script>
import wepy from 'wepy'
import WeCropper from 'we-cropper'

export default class Cropper extends wepy.component {
  data = {
    $: null,
    id: 'cropper',
    disable: true
  }

  props = {
    options: Object
  }

  computed = {
    width () {
      return this.options.width
    },
    height () {
      return this.options.height
    }
  }

  methods = {
    ts (e) {
      this.$.touchStart(e)
    },
    tm (e) {
      this.$.touchMove(e)
    },
    te (e) {
      this.$.touchEnd(e)
    },
    canvasError (e) {
      console.error(e.detail.errMsg)
    }
  }
  pushOrigin (src) {
    this.$.pushOrign(src)
  }
  updateCanvas () {
    this.$.updateCanvas()
  }
  getCropperImage (fn, ev) {
    this.$.getCropperImage(fn)
  }
  getCropperBase64 (fn, ev) {
    this.$.getCropperImage(fn)
  }
  onLoad () {
    const options = this.options
    options.id = this.id
    this.$ = new WeCropper(options)
    .on('ready', (...args) => {
      this.$emit('ready', ...args)
    })
    .on('beforeImageLoad', (...args) => {
      this.$emit('beforeImageLoad', ...args)
    })
    .on('imageLoad', (...args) => {
      this.$emit('imageLoad', ...args)
    })
    .on('beforeDraw', (...args) => {
      this.$emit('beforeDraw', ...args)
    })
    .updateCanvas()
  }
}
</script>

<style>
.cropper {
  background-color: transparent;
}
</style>
